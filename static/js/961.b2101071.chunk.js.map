{"version":3,"file":"static/js/961.b2101071.chunk.js","mappings":"6OAIe,SAASA,IACtB,OAA0BC,EAAAA,EAAAA,YAA1B,eAAOC,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAWR,OATAE,EAAAA,EAAAA,YAAU,WAENF,IACEG,EAAAA,EAAAA,IAAgBH,GAASI,MAAK,SAAAC,GAC5BN,EAASM,EACV,GAEN,GAAE,CAACL,KAGF,8BACGF,IACC,4BACE,4BACA,UAAC,KAAD,CAASQ,GAAG,IAAZ,UACF,IADE,cAIE,0BACE,gBAEEC,MAAM,MACNC,IAAG,yCAAoCV,EAAMW,aAC7CC,IAAKZ,EAAMa,oBAGf,4BACE,wBAAMb,EAAMc,OAASd,EAAMe,QAC3B,0BACE,yCADF,IACwBf,EAAMgB,iBAE9B,0BACE,uCADF,IACsBhB,EAAMiB,iBAE5B,0BACE,mCADF,IACkBjB,EAAMkB,OAAOC,KAAI,SAAAC,GAAI,OAAIA,EAAKL,IAAT,IAAeM,KAAK,WAE3D,0BACE,oCADF,IACmBrB,EAAMsB,QADzB,YAGA,wBACE,wCAEF,uBAAItB,EAAMuB,kBAGd,mBAEA,4BACE,oDACA,4BACE,UAAC,KAAD,CACEf,GAAG,OADL,UAIG,IAJH,WAOA,UAAC,KAAD,CACEA,GAAG,UADL,UAIG,IAJH,oBAUJ,mBAEA,SAAC,KAAD,CAAQgB,QAAStB,QAK1B,C,8LCjFKuB,EAAS,mCACTC,EAAW,gCAEV,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,6GAEmBC,EAAAA,GAAAA,IAAA,UACrBF,EADqB,uCACkBD,EADlB,sBAFnB,cAEEI,EAFF,yBAKGA,EAAStB,KAAKuB,SALjB,gCAOJC,QAAQC,IAAI,KAAMC,SAPd,gFAWE,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA8BC,GAA9B,gGAEiBP,EAAAA,GAAAA,IAAA,UACrBF,EADqB,gCACWD,EADX,kBAC4BU,EAD5B,sBAFjB,cAEAN,EAFA,yBAKCA,EAAStB,MALV,gCAONwB,QAAQC,IAAI,KAAMC,SAPZ,gFAWA,SAAe5B,EAAtB,+CAAO,OAAP,oBAAO,WAA+B+B,GAA/B,gGAEiBR,EAAAA,GAAAA,IAAA,UACrBF,EADqB,iBACJU,EADI,oBACUX,EADV,sBAFjB,cAEAI,EAFA,yBAKCA,EAAStB,MALV,gCAONwB,QAAQC,IAAI,KAAMC,SAPZ,gFAWA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA4BD,GAA5B,gGAEiBR,EAAAA,GAAAA,IAAA,UACrBF,EADqB,iBACJU,EADI,4BACkBX,EADlB,sBAFjB,cAEAI,EAFA,yBAKCA,EAAStB,MALV,gCAONwB,QAAQC,IAAI,KAAMC,SAPZ,gFAWA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAAgCF,GAAhC,gGAEiBR,EAAAA,GAAAA,IAAA,UACrBF,EADqB,iBACJU,EADI,4BACkBX,EADlB,sBAFjB,cAEAI,EAFA,yBAKCA,EAAStB,MALV,gCAONwB,QAAQC,IAAI,KAAMC,SAPZ,gF","sources":["pages/MovieDetails/MovieDetails.jsx","servises/API.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams, Outlet, NavLink  } from 'react-router-dom';\nimport { getMovieDetails } from '../../servises/API';\n\nexport default function MovieDetailsPage() {\n  const [movie, setMovie] = useState();\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    (() => {\n      movieId &&\n        getMovieDetails(movieId).then(data => {\n          setMovie(data);\n        });\n    })();\n  }, [movieId]);\n\n  return (\n    <>\n      {movie && (\n        <div >\n          <div >\n          <NavLink to='/'>\n\t\t\t\t\t\t\t{' '}\n\t\t\t\t\t\t\tGo back\n\t\t\t\t\t\t</NavLink>\n            <div >\n              <img\n                \n                width=\"230\"\n                src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\n                alt={movie.original_title}\n              />\n            </div>\n            <div >\n              <h2 >{movie.title || movie.name}</h2>\n              <p>\n                <b>Release date:</b> {movie.release_date}\n              </p>\n              <p>\n                <b>User Score:</b> {movie.vote_average}\n              </p>\n              <p>\n                <b>Genres:</b> {movie.genres.map(genr => genr.name).join(' / ')}\n              </p>\n              <p>\n                <b>Runtime:</b> {movie.runtime} min.\n              </p>\n              <p>\n                <b>Overview:</b>\n              </p>\n              <p>{movie.overview}</p>\n            </div>\n          </div>\n          <hr />\n\n          <nav >\n            <h3 >Additional Information</h3>\n            <div >\n              <NavLink\n                to=\"cast\"\n                \n              >\n                {' '}\n                Cast\n              </NavLink>\n              <NavLink\n                to=\"reviews\"\n                \n              >\n                {' '}\n                Reviews\n              </NavLink>\n            </div>\n          </nav>\n\n          <hr />\n\n          <Outlet context={movieId} />\n        </div>\n      )}\n    </>\n  );\n}","import axios from \"axios\";\n\nconst API_KEY =\"f9dd15ebb2e93eadea3d7128518367b2\";\nconst BASE_URL = \"https://api.themoviedb.org/3/\";\n\nexport async function getPopularMovie() {\n\ttry {\n\t  const responce = await axios.get(\n\t\t`${BASE_URL}trending/movie/week?api_key=${API_KEY}&language='en-US'`\n\t  );\n\t  return responce.data.results;\n\t} catch (error) {\n\t  console.log(error.message);\n\t}\n  }\n  \n  export async function getSearchMovie(query) {\n\ttry {\n\t  const responce = await axios.get(\n\t\t`${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}&language='en-US'`\n\t  );\n\t  return responce.data;\n\t} catch (error) {\n\t  console.log(error.message);\n\t}\n  }\n  \n  export async function getMovieDetails(id) {\n\ttry {\n\t  const responce = await axios.get(\n\t\t`${BASE_URL}movie/${id}?api_key=${API_KEY}&language='en-US'`\n\t  );\n\t  return responce.data;\n\t} catch (error) {\n\t  console.log(error.message);\n\t}\n  }\n  \n  export async function getMovieCast(id) {\n\ttry {\n\t  const responce = await axios.get(\n\t\t`${BASE_URL}movie/${id}/credits?api_key=${API_KEY}&language='en-US'`\n\t  );\n\t  return responce.data;\n\t} catch (error) {\n\t  console.log(error.message);\n\t}\n  }\n  \n  export async function getMoviesReviews(id) {\n\ttry {\n\t  const responce = await axios.get(\n\t\t`${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}&language='en-US'`\n\t  );\n\t  return responce.data;\n\t} catch (error) {\n\t  console.log(error.message);\n\t}\n  }\n"],"names":["MovieDetailsPage","useState","movie","setMovie","movieId","useParams","useEffect","getMovieDetails","then","data","to","width","src","poster_path","alt","original_title","title","name","release_date","vote_average","genres","map","genr","join","runtime","overview","context","API_KEY","BASE_URL","getPopularMovie","axios","responce","results","console","log","message","getSearchMovie","query","id","getMovieCast","getMoviesReviews"],"sourceRoot":""}